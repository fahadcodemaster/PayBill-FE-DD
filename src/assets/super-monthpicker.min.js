/*
 * Super Month Picker
 * doc: http://markusslima.github.io/super-monthpicker/
 * github: https://github.com/markusslima/super-monthpicker
 *
 * Copyright (c) 2018 Markus Vinicius da Silva Lima
 * Version 1.0.0
 * Licensed under the MIT license.
 */
!function(t){"use strict";t(document).on("click",function(){t(".SMPContainer").hide()});var e=function(e,n){this.options=n,this.$elementSuperMonthPicker=[],this.$element=t(e)};e.prototype={startYear:"",startMonth:"",endYear:"",endMonth:"",maxYear:"",maxMonth:"",minYear:"",minMonth:"",startSelectYear:"",startSelectMonth:"",endSelectYear:"",endSelectMonth:"",currentStartMonth:"",currentStartYear:"",currentEndMonth:"",currentEndYear:"",destroy:function(){var t=this.$element.clone();this.$element.remove(),this.$elementSuperMonthPicker.before(t),this.$elementSuperMonthPicker.remove(),t.data("sMonthPicker",void 0).prop("disabled",!1).val("")},reset:function(){var t=new Date;""!=this.options.startDate?"object"==typeof this.options.startDate?(this.startMonth=this.options.startDate.getMonth()+1,this.startYear=this.options.startDate.getFullYear()):(this.startMonth=Number(this.options.startDate.split("-")[0]),this.startYear=Number(this.options.startDate.split("-")[1])):(this.startMonth=t.getMonth()+1,this.startMonth=t.getFullYear()),this.startSelectMonth=this.startMonth,this.startSelectYear=this.startYear,this.currentStartMonth=this.startMonth,this.currentStartYear=this.startYear,""!=this.options.endDate&&("object"==typeof this.options.endDate?(this.endMonth=this.options.endDate.getMonth()+1,this.endYear=this.options.endDate.getFullYear()):(this.endMonth=Number(this.options.endDate.split("-")[0]),this.endYear=Number(this.options.endDate.split("-")[1])),this.endSelectMonth=this.endMonth,this.endSelectYear=this.endYear,this.currentEndMonth=this.endMonth,this.currentEndYear=this.endYear),this.$elementSuperMonthPicker.find(".SMPContent .SMPYear").html(this.startSelectYear),this.$elementSuperMonthPicker.find(".SMPContentEnd .SMPYear").html(this.endSelectYear),this.check();var e=(this.startSelectMonth<10?"0":"")+this.startSelectMonth+"/"+this.startSelectYear+(""!=this.options.endDate?" ~ "+(this.endSelectMonth<10?"0":"")+this.endSelectMonth+"/"+this.endSelectYear:"");this.$element.val(e)},disabled:function(t){if(1!=t&&0!=t)return this.options.disabled;this.options.disabled=t,this.check(),this.checkNavigator(this.$elementSuperMonthPicker.find(".SMPContainer .SMPContent"),this.startSelectYear),this.checkNavigator(this.$elementSuperMonthPicker.find(".SMPContainer .SMPContentEnd"),this.endSelectYear)},monthsName:function(e){if(void 0===e)return this.options.monthsName;var n=this;this.options.monthsName=e,this.$elementSuperMonthPicker.find(".SMPContainer .SMPChangeMonth").each(function(){t(this).find("div").each(function(e){t(this).html(n.options.monthsName[e].slice(0,3))})})},min:function(t){if(void 0===t)return this.options.min;this.options.min=t,"object"==typeof this.options.min?(this.minMonth=this.options.min.getMonth()+1,this.minYear=this.options.min.getFullYear()):(this.minMonth=Number(this.options.min.split("-")[0]),this.minYear=Number(this.options.min.split("-")[1])),this.checkNavigator(this.$elementSuperMonthPicker.find(".SMPContainer .SMPContent"),this.startSelectYear),this.checkNavigator(this.$elementSuperMonthPicker.find(".SMPContainer .SMPContentEnd"),this.endSelectYear),this.check()},max:function(t){if(void 0===t)return this.options.max;this.options.max=t,"object"==typeof this.options.max?(this.maxMonth=this.options.max.getMonth()+1,this.maxYear=this.options.max.getFullYear()):(this.maxMonth=Number(this.options.max.split("-")[0]),this.maxYear=Number(this.options.max.split("-")[1])),this.checkNavigator(this.$elementSuperMonthPicker.find(".SMPContainer .SMPContent"),this.startSelectYear),this.checkNavigator(this.$elementSuperMonthPicker.find(".SMPContainer .SMPContentEnd"),this.endSelectYear),this.check()},startDate:function(e){if(void 0===e)return this.options.startDate;this.options.startDate=e,""!=this.options.startDate?"object"==typeof this.options.startDate?(this.startMonth=this.options.startDate.getMonth()+1,this.startYear=this.options.startDate.getFullYear()):(this.startMonth=Number(this.options.startDate.split("-")[0]),this.startYear=Number(this.options.startDate.split("-")[1])):(this.startMonth=d.getMonth()+1,this.startMonth=d.getFullYear()),""!=this.options.endDate&&(this.startYear>this.endYear?console.error("Invalid: startDate greater than or equal endDate"):this.startYear==this.endYear&&this.startMonth>=this.endMonth&&console.error("Invalid: startDate greater than or equal endDate")),this.startSelectMonth=this.startMonth,this.startSelectYear=this.startYear,this.currentStartMonth=this.startMonth,this.currentStartYear=this.startYear,""!=this.options.endDate?(this.$element.val((this.startSelectMonth<10?"0":"")+this.startSelectMonth+"/"+this.startSelectYear+" ~ "+(this.endSelectMonth<10?"0":"")+this.endSelectMonth+"/"+this.endSelectYear),0==this.$elementSuperMonthPicker.find(".SMPContainer .SMPContentEnd").length&&(this.$elementSuperMonthPicker.find(".SMPContainer .SMPContent").after(t(this.htmlContentEnd())),this.eventsContentEnd(),this.check())):(this.$element.val((this.startSelectMonth<10?"0":"")+this.startSelectMonth+"/"+this.startSelectYear),this.$elementSuperMonthPicker.find(".SMPContainer").removeAttr("style"),this.$elementSuperMonthPicker.find(".SMPContainer .SMPContentEnd, .SMPContainer .SMPDivider").remove())},endDate:function(e){if(void 0===e)return this.options.endDate;this.options.endDate=e,"object"==typeof this.options.endDate?(this.endMonth=this.options.endDate.getMonth()+1,this.endYear=this.options.endDate.getFullYear()):(this.endMonth=Number(this.options.endDate.split("-")[0]),this.endYear=Number(this.options.endDate.split("-")[1])),this.endSelectMonth=this.endMonth,this.endSelectYear=this.endYear,this.currentEndMonth=this.endMonth,this.currentEndYear=this.endYear,""!=this.options.endDate?(this.startYear>this.endYear?console.error("Invalid: startDate greater than endDate"):this.startYear==this.endYear&&this.startMonth>=this.endMonth&&console.error("Invalid: startDate greater than endDate"),this.$element.val((this.startSelectMonth<10?"0":"")+this.startSelectMonth+"/"+this.startSelectYear+" ~ "+(this.endSelectMonth<10?"0":"")+this.endSelectMonth+"/"+this.endSelectYear),0==this.$elementSuperMonthPicker.find(".SMPContainer .SMPContentEnd").length&&(this.$elementSuperMonthPicker.find(".SMPContainer .SMPContent").after(t(this.htmlContentEnd())),this.eventsContentEnd(),this.check())):(this.$element.val((this.startSelectMonth<10?"0":"")+this.startSelectMonth+"/"+this.startSelectYear),this.$elementSuperMonthPicker.find(".SMPContainer").removeAttr("style"),this.$elementSuperMonthPicker.find(".SMPContainer .SMPContentEnd, .SMPContainer .SMPDivider").remove())},btnOk:function(t){if(void 0===t)return this.options.btnOk;this.options.btnOk=t,this.$elementSuperMonthPicker.find(".btnOk").html(this.options.btnOk)},btnCancel:function(t){if(void 0===t)return this.options.btnCancel;this.options.btnCancel=t,this.$elementSuperMonthPicker.find(".btnCancel").html(this.options.btnCancel)},onSelectMonth:function(){if(void 0===value)return this.options.onSelectMonth;"function"==typeof value?this.options.onSelectMonth=value:console.error('This "onSelectMonth" not a function.')},onSelectYear:function(){if(void 0===value)return this.options.onSelectYear;"function"==typeof value?this.options.onSelectYear=value:console.error('This "onSelectYear" not a function.')},onOpen:function(){if(void 0===value)return this.options.onOpen;"function"==typeof value?this.options.onOpen=value:console.error('This "onOpen" not a function.')},onClose:function(){if(void 0===value)return this.options.onClose;"function"==typeof value?this.options.onClose=value:console.error('This "onClose" not a function.')},onChoose:function(){if(void 0===value)return this.options.onChoose;"function"==typeof value?this.options.onChoose=value:console.error('This "onChoose" not a function.')},theme:function(t){if(""==t)return this.options.theme;this.options.theme=t,this.$elementSuperMonthPicker.attr("data-theme",this.options.theme)},get:function(){var t=[this.startSelectMonth+"/"+this.startSelectYear];return""!=this.options.endDate&&t.push(this.endSelectMonth+"/"+this.endSelectYear),t},check:function(){var t=this.$elementSuperMonthPicker,e=t.find(".SMPContent .SMPYear").html(),n="";if(t.find(".SMPChangeMonth div").removeClass("disabled"),t.find(".SMPChangeMonth div").removeClass("active"),""!=this.options.min&&("object"==typeof this.options.min?(this.minMonth=this.options.min.getMonth()+1,this.minYear=this.options.min.getFullYear()):(this.minMonth=Number(this.options.min.split("-")[0]),this.minYear=Number(this.options.min.split("-")[1]))),""!=this.options.max&&("object"==typeof this.options.max?(this.maxMonth=this.options.max.getMonth()+1,this.maxYear=this.options.max.getFullYear()):(this.maxMonth=Number(this.options.max.split("-")[0]),this.maxYear=Number(this.options.max.split("-")[1]))),e==this.startSelectYear&&t.find('.SMPContent .SMPChangeMonth div[data-val="'+this.startSelectMonth+'"]').addClass("active"),this.options.disabled)t.find(".SMPContent").find(".SMPChangeMonth div").addClass("disabled");else{if(e==this.minYear)for(var i=1;i<=12;i++)i<this.minMonth&&t.find(".SMPContent").find('.SMPChangeMonth div[data-val="'+i+'"]').addClass("disabled");if(e==this.maxYear)for(i=1;i<=12;i++)i>this.maxMonth&&t.find(".SMPContent").find('.SMPChangeMonth div[data-val="'+i+'"]').addClass("disabled")}if(""!=this.options.endDate)if((n=t.find(".SMPContentEnd .SMPYear").html())==this.endSelectYear&&t.find('.SMPContentEnd .SMPChangeMonth div[data-val="'+this.endSelectMonth+'"]').addClass("active"),this.options.disabled)t.find(".SMPContentEnd").find(".SMPChangeMonth div").addClass("disabled");else{if(n==this.minYear)for(i=1;i<=12;i++)i<this.minMonth&&t.find(".SMPContentEnd").find('.SMPChangeMonth div[data-val="'+i+'"]').addClass("disabled");if(n==this.maxYear)for(i=1;i<=12;i++)i>this.maxMonth&&t.find(".SMPContentEnd").find('.SMPChangeMonth div[data-val="'+i+'"]').addClass("disabled");if(e>=this.endSelectYear)for(i=1;i<=12;i++)(i>=this.endSelectMonth||e>this.endSelectYear)&&t.find(".SMPContent").find('.SMPChangeMonth div[data-val="'+i+'"]').addClass("disabled");if(n<=this.startSelectYear)for(i=1;i<=12;i++)(i<=this.startSelectMonth||n<this.startSelectYear)&&t.find(".SMPContentEnd").find('.SMPChangeMonth div[data-val="'+i+'"]').addClass("disabled")}this.options.changeMonth||t.find(".SMPChangeMonth div").addClass("disabled")},checkNavigator:function(t,e){this.options.changeYear&&!this.options.disabled?(t.find(".SMPRight, .SMPLeft").show(),t.find(".SMPRight, .SMPLeft").removeClass("disabled"),this.minYear>=e&&""!=this.options.min&&t.find(".SMPLeft").addClass("disabled"),this.maxYear<=e&&""!=this.options.max&&t.find(".SMPRight").addClass("disabled")):t.find(".SMPRight, .SMPLeft").hide()},setLastSelected:function(){this.startSelectMonth=this.currentStartMonth,this.startSelectYear=this.currentStartYear,this.endSelectMonth=this.currentEndMonth,this.endSelectYear=this.currentEndYear,this.$elementSuperMonthPicker.find(".SMPContent .SMPYear").html(this.startSelectYear),this.$elementSuperMonthPicker.find(".SMPContentEnd .SMPYear").html(this.endSelectYear),this.check()},htmlContentEnd:function(){return'<div class="SMPDivider"></div><div class="SMPContentEnd">  <div class="SMPChangeYear">    <div class="SMPYear">'+this.endSelectYear+'</div>    <div class="SMPLeft"><i class="arrow left"></i></div>    <div class="SMPRight"><i class="arrow right"></i></div>  </div>  <div class="SMPChangeMonth">    <div data-val="1">'+this.options.monthsName[0].slice(0,3)+'</div>    <div data-val="2">'+this.options.monthsName[1].slice(0,3)+'</div>    <div data-val="3">'+this.options.monthsName[2].slice(0,3)+'</div>    <div data-val="4">'+this.options.monthsName[3].slice(0,3)+'</div>    <div data-val="5">'+this.options.monthsName[4].slice(0,3)+'</div>    <div data-val="6">'+this.options.monthsName[5].slice(0,3)+'</div>    <div data-val="7">'+this.options.monthsName[6].slice(0,3)+'</div>    <div data-val="8">'+this.options.monthsName[7].slice(0,3)+'</div>    <div data-val="9">'+this.options.monthsName[8].slice(0,3)+'</div>    <div data-val="10">'+this.options.monthsName[9].slice(0,3)+'</div>    <div data-val="11">'+this.options.monthsName[10].slice(0,3)+'</div>    <div data-val="12">'+this.options.monthsName[11].slice(0,3)+"</div>  </div></div>"},eventsContentEnd:function(){var e=this.$elementSuperMonthPicker.find(".SMPContentEnd"),n=this;this.checkNavigator(e,this.endSelectYear),e.find('.SMPChangeMonth div[data-val="'+this.endMonth+'"]').addClass("active"),this.$elementSuperMonthPicker.find(".SMPContainer").css("width","454px"),e.find(".SMPLeft").on("click",function(t){var i=Number(e.find(".SMPYear").html());i--,(n.minYear<=i||""==n.options.min)&&(e.find(".SMPYear").html(i),n.check(),n.checkNavigator(e,i)),"function"==typeof n.options.onSelectYear&&n.options.onSelectYear()}),e.find(".SMPRight").on("click",function(t){if(n.options.changeYear){var i=Number(e.find(".SMPYear").html());i++,(n.maxYear>=i||""==n.options.max)&&(e.find(".SMPYear").html(i),n.check(),n.checkNavigator(e,i)),"function"==typeof n.options.onSelectYear&&n.options.onSelectYear()}}),e.find(".SMPChangeMonth div").on("click",function(i){if(n.options.changeYear){if(t(this).hasClass("disabled"))return!1;e.find(".SMPChangeMonth div").removeClass("active"),t(this).addClass("active"),n.endSelectMonth=t(this).attr("data-val"),n.endSelectYear=e.find(".SMPYear").html(),n.check(),"function"==typeof n.options.onSelectMonth&&n.options.onSelectMonth()}})},constructor:function(){var e,n=this,i=this.$element.clone(),s=new Date;if(""!=this.options.startDate?"object"==typeof this.options.startDate?(this.startMonth=this.options.startDate.getMonth()+1,this.startYear=this.options.startDate.getFullYear()):(this.startMonth=Number(this.options.startDate.split("-")[0]),this.startYear=Number(this.options.startDate.split("-")[1])):(this.startMonth=s.getMonth()+1,this.startMonth=s.getFullYear()),this.startSelectMonth=this.startMonth,this.startSelectYear=this.startYear,this.currentStartMonth=this.startMonth,this.currentStartYear=this.startYear,""!=this.options.endDate){if("object"==typeof this.options.endDate?(this.endMonth=this.options.endDate.getMonth()+1,this.endYear=this.options.endDate.getFullYear()):(this.endMonth=Number(this.options.endDate.split("-")[0]),this.endYear=Number(this.options.endDate.split("-")[1])),this.endSelectMonth=this.endMonth,this.endSelectYear=this.endYear,this.currentEndMonth=this.endMonth,this.currentEndYear=this.endYear,this.startYear>this.endYear?console.error("Invalid: startDate greater than endDate"):this.startYear==this.endYear&&this.startMonth>=this.endMonth&&console.error("Invalid: startDate greater than endDate"),this.startSelectYear>this.endSelectYear)return console.error("Invalid date: The start date is greater than the end date"),!1;if(this.startSelectYear==this.endSelectYear&&this.startSelectMonth>this.endSelectMonth)return console.error("Invalid date: The start date is greater than the end date"),!1;if(""!=this.options.max){if(this.endSelectYear==this.maxYear&&this.endSelectMonth>this.maxMonth)return console.error("Invalid Date: The end date is greater than the maximum date"),!1;if(this.endSelectYear>this.maxYear)return console.error("Invalid Date: The end date is greater than the maximum date"),!1}}if(""!=this.options.min){if("object"==typeof this.options.min?(this.minMonth=this.options.min.getMonth()+1,this.minYear=this.options.min.getFullYear()):(this.minMonth=Number(this.options.min.split("-")[0]),this.minYear=Number(this.options.min.split("-")[1])),this.startSelectYear<this.minYear)return console.error("Invalid date: The start date is less than the minimum date"),!1;if(this.startSelectYear==this.minYear&&this.startSelectMonth<this.minMonth)return console.error("Invalid date: The start date is less than the minimum date"),!1}if(""!=this.options.max){if("object"==typeof this.options.max?(this.maxMonth=this.options.max.getMonth()+1,this.maxYear=this.options.max.getFullYear()):(this.maxMonth=Number(this.options.max.split("-")[0]),this.maxYear=Number(this.options.max.split("-")[1])),this.startSelectYear>this.maxYear)return console.error("Invalid date: The start date is greater than the maximum date"),!1;if(this.startSelectYear==this.maxYear&&this.startSelectMonth>this.maxMonth)return console.error("Invalid date: The start date is greater than the maximum date"),!1}if(""!=this.options.min&&""!=this.options.max){if(this.minYear>this.maxYear)return console.error("Max date less than the minimum date. Enter a date equal to or greater than the minimum date"),!1;if(this.minYear==this.maxYear&&this.minMonth>this.maxMonth)return console.error("Max date less than the minimum date. Enter a date equal to or greater than the minimum date"),!1}e=(this.startSelectMonth<10?"0":"")+this.startSelectMonth+"/"+this.startSelectYear+(""!=this.options.endDate?" ~ "+(this.endSelectMonth<10?"0":"")+this.endSelectMonth+"/"+this.endSelectYear:""),i.val(e),i.prop("disabled",!0),this.$elementSuperMonthPicker=t('<div class="SuperMonthPicker" data-theme="'+this.options.theme+'">  <div class="SMPField"></div>  <div class="SMPContainer">    <div class="SMPContent">      <div class="SMPChangeYear">        <div class="SMPYear">'+this.startSelectYear+'</div>        <div class="SMPLeft"><i class="arrow left"></i></div>        <div class="SMPRight"><i class="arrow right"></i></div>      </div>      <div class="SMPChangeMonth">        <div data-val="1">'+this.options.monthsName[0].slice(0,3)+'</div>        <div data-val="2">'+this.options.monthsName[1].slice(0,3)+'</div>        <div data-val="3">'+this.options.monthsName[2].slice(0,3)+'</div>        <div data-val="4">'+this.options.monthsName[3].slice(0,3)+'</div>        <div data-val="5">'+this.options.monthsName[4].slice(0,3)+'</div>        <div data-val="6">'+this.options.monthsName[5].slice(0,3)+'</div>        <div data-val="7">'+this.options.monthsName[6].slice(0,3)+'</div>        <div data-val="8">'+this.options.monthsName[7].slice(0,3)+'</div>        <div data-val="9">'+this.options.monthsName[8].slice(0,3)+'</div>        <div data-val="10">'+this.options.monthsName[9].slice(0,3)+'</div>        <div data-val="11">'+this.options.monthsName[10].slice(0,3)+'</div>        <div data-val="12">'+this.options.monthsName[11].slice(0,3)+"</div>      </div>    </div>"+(""!=this.options.endDate?this.htmlContentEnd():"")+'    <div class="SMPButtons">      <button type="button" class="btnCancel">'+this.options.btnCancel+'</button>      <button type="button" class="btnOk">'+this.options.btnOk+"</button>    </div>  </div></div>").prepend(i),this.$element.before(this.$elementSuperMonthPicker),i.data("sMonthPicker",this.$element.data("sMonthPicker")),this.$element.remove(),this.$element=i;var o=this.$elementSuperMonthPicker.find(".SMPContent");this.check(),this.$elementSuperMonthPicker.on("click",function(t){t.stopPropagation()}),this.checkNavigator(o,this.startSelectYear),this.$elementSuperMonthPicker.find(".SMPField").on("click",function(e){t(".SMPContainer").hide(),n.$elementSuperMonthPicker.find(".SMPContainer").show(),n.setLastSelected(),"function"==typeof n.options.onOpen&&n.options.onOpen()}),o.find(".SMPLeft").on("click",function(t){if(n.options.changeYear){var e=Number(o.find(".SMPYear").html());e--,(n.minYear<=e||""==n.options.min)&&(o.find(".SMPYear").html(e),n.check(),n.checkNavigator(o,e)),"function"==typeof n.options.onSelectYear&&n.options.onSelectYear()}}),o.find(".SMPRight").on("click",function(t){if(n.options.changeYear){var e=Number(o.find(".SMPYear").html());e++,(n.maxYear>=e||""==n.options.max)&&(o.find(".SMPYear").html(e),n.check(),n.checkNavigator(o,e)),"function"==typeof n.options.onSelectYear&&n.options.onSelectYear()}}),o.find(".SMPChangeMonth div").on("click",function(e){if(t(this).hasClass("disabled"))return!1;o.find(".SMPChangeMonth div").removeClass("active"),t(this).addClass("active"),n.startSelectMonth=t(this).attr("data-val"),n.startSelectYear=o.find(".SMPYear").html(),n.check(),"function"==typeof n.options.onSelectMonth&&n.options.onSelectMonth()}),""!=this.options.endDate?this.eventsContentEnd():this.$elementSuperMonthPicker.find(".SMPContainer").css("width","auto"),n.$elementSuperMonthPicker.find(".btnOk").on("click",function(t){var e=(n.startSelectMonth<10?"0":"")+n.startSelectMonth+"/"+n.startSelectYear+(""!=n.options.endDate?" ~ "+(n.endSelectMonth<10?"0":"")+n.endSelectMonth+"/"+n.endSelectYear:"");n.$element.val(e),n.currentStartMonth=n.startSelectMonth,n.currentStartYear=n.startSelectYear,n.currentEndMonth=n.endSelectMonth,n.currentEndYear=n.endSelectYear,n.$elementSuperMonthPicker.find(".SMPContainer").hide(),"function"==typeof n.options.onChoose&&n.options.onChoose()}),n.$elementSuperMonthPicker.find(".btnCancel").on("click",function(t){n.$elementSuperMonthPicker.find(".SMPContainer").hide(),"function"==typeof n.options.onClose&&n.options.onClose()})}};var n=t.fn.sMonthPicker;t.fn.sMonthPicker=function(n,i){var s="",o=this.each(function(){var o=t(this),a=o.data("sMonthPicker"),h=t.extend({},t.fn.sMonthPicker.defaults,n,"object"==typeof n&&n);a||"object"!=typeof n&&n||(o.data("sMonthPicker",a=new e(this,h)),a.constructor()),a?"string"==typeof n&&(s=a[n](i)):console.error("sMonthPicker not defined")});return void 0!==typeof s?s:o},t.fn.sMonthPicker.defaults={monthsName:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],max:"",min:"",changeMonth:!0,changeYear:!0,startDate:new Date,endDate:"",btnOk:"Ok",btnCancel:"Cancel",disabled:!1,theme:"default",onSelectMonth:function(){},onSelectYear:function(){},onOpen:function(){},onClose:function(){},onChoose:function(){}},t.fn.sMonthPicker.noConflict=function(){return t.fn.sMonthPicker=n,this}}(window.jQuery);